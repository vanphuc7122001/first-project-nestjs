{
  "name": "mydermbox-api",
  "version": "1.0.0",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "engines": {
    "node": "20.x"
  },
  "scripts": {
    "build": "npx prisma generate && nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/src/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "prisma:merge": "npx prisma-merge -b './prisma/base.prisma' -s './prisma/schemas/*.prisma' -o './prisma/schema.prisma'",
    "prisma:merge:window": "npx prisma-merge -b ./prisma/base.prisma -s ./prisma/schemas/*.prisma -o ./prisma/schema.prisma",
    "prisma:format": "npx prisma format",
    "prisma:generate": "npm run prisma:merge && npm run prisma:format && npx prisma generate",
    "prisma:generate:window": "npm run prisma:merge:window && npm run prisma:format && npx prisma generate",
    "prisma:migrate:dev": "dotenv -e .env.development -- npx prisma migrate dev",
    "prisma:migrate:dev:generate": "dotenv -e .env.development -- npx prisma migrate dev --create-only",
    "prisma:migrate:stage": "dotenv -e .env.staging -- npx prisma migrate deploy",
    "prisma:migrate:prod": "dotenv -e .env.production -- npx prisma migrate deploy",
    "prisma:seed:dev": "dotenv -e .env.development -- npx prisma db seed",
    "prisma:seed:stage": "dotenv -e .env.staging -- npx prisma db seed",
    "prisma:seed:prod": "dotenv -e .env.production -- npx prisma db seed"
  },
  "dependencies": {
    "@nestjs/axios": "^3.0.0",
    "@nestjs/bull": "^10.1.1",
    "@nestjs/common": "^10.0.0",
    "@nestjs/config": "^3.0.0",
    "@nestjs/core": "^10.0.0",
    "@nestjs/passport": "^10.0.0",
    "@nestjs/platform-express": "^10.0.0",
    "@nestjs/swagger": "^7.1.12",
    "@prisma/client": "^5.0.0",
    "axios": "^1.5.0",
    "bcryptjs": "^2.4.3",
    "bull": "^4.12.9",
    "class-transformer": "^0.5.1",
    "compression": "^1.7.4",
    "firebase-admin": "^11.10.1",
    "geofire-common": "^6.0.0",
    "helmet": "^7.0.0",
    "joi": "^17.9.2",
    "jsonwebtoken": "^9.0.1",
    "lodash": "^4.17.21",
    "mime-types": "^2.1.35",
    "nodemailer": "^6.9.13",
    "passport": "^0.6.0",
    "passport-jwt": "^4.0.1",
    "passport-local": "^1.0.0",
    "qs": "^6.11.2",
    "reflect-metadata": "^0.1.13",
    "rxjs": "^7.8.1",
    "slugify": "^1.6.6",
    "stripe": "^13.3.0",
    "uuid": "^9.0.0"
  },
  "devDependencies": {
    "@nestjs/cli": "^10.0.0",
    "@nestjs/schematics": "^10.0.0",
    "@nestjs/testing": "^10.0.0",
    "@types/bcryptjs": "^2.4.2",
    "@types/compression": "^1.7.2",
    "@types/express": "^4.17.17",
    "@types/jest": "^29.5.2",
    "@types/jsonwebtoken": "^9.0.2",
    "@types/mime-types": "^2.1.1",
    "@types/node": "^20.3.1",
    "@types/nodemailer": "^6.4.15",
    "@types/passport-jwt": "^3.0.9",
    "@types/passport-local": "^1.0.35",
    "@types/supertest": "^2.0.12",
    "@types/uuid": "^9.0.3",
    "@typescript-eslint/eslint-plugin": "^5.62.0",
    "@typescript-eslint/parser": "^5.62.0",
    "dotenv-cli": "^7.2.1",
    "eslint": "^8.45.0",
    "eslint-config-prettier": "^8.8.0",
    "eslint-plugin-prettier": "^4.2.1",
    "jest": "^29.5.0",
    "prettier": "^2.8.8",
    "prisma": "^5.3.1",
    "prisma-merge": "^0.2.0",
    "source-map-support": "^0.5.21",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.0",
    "ts-loader": "^9.4.3",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.2.2"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  },
  "prisma": {
    "seed": "ts-node prisma/seed.ts"
  }
}
